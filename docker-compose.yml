version: '3.9'

services:
  # -------------------------
  # Banco de dados
  # -------------------------
  db:
    image: postgres:15
    container_name: streampix-postgres
    restart: always
    environment:
      POSTGRES_USER: streampix_user
      POSTGRES_PASSWORD: 87Y87WEYTF87C7834RYN
      POSTGRES_DB: streampix_db
    volumes:
      - ./streampix-db/data:/var/lib/postgresql/data
    networks:
      - streampix-net
    ports:
      - "5434:5432"

  

  # -------------------------
  # Backend Spring Boot
  # -------------------------
  backend:
    build:
      context: ./streampix-backend
      dockerfile: Dockerfile
    container_name: streampix-backend
    restart: always
    ports:
      - "8080:8080"
    environment:
      SPRING_APPLICATION_NAME: ${SPRING_APPLICATION_NAME}
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: ${SPRING_JPA_HIBERNATE_DDL_AUTO}
      SPRING_JPA_SHOW_SQL: ${SPRING_JPA_SHOW_SQL}
      SPRING_JPA_FORMAT_SQL: ${SPRING_JPA_FORMAT_SQL}
      SPRING_JPA_TIMEZONE: ${SPRING_JPA_TIMEZONE}
      LOG_SQL_LEVEL: ${LOG_SQL_LEVEL}
      LOG_SQL_BINDER_LEVEL: ${LOG_SQL_BINDER_LEVEL}
      LOG_WEBSOCKET_LEVEL: ${LOG_WEBSOCKET_LEVEL}
      LOG_MESSAGING_LEVEL: ${LOG_MESSAGING_LEVEL}
      LOG_STREAMPIX_WS_LEVEL: ${LOG_STREAMPIX_WS_LEVEL}
      BACKEND_URL: ${BACKEND_URL}
      FRONTEND_URL: ${FRONTEND_URL}
      WEBSOCKET_URL: ${WEBSOCKET_URL}
      SERVER_PORT: ${SERVER_PORT}
      JWT_SECRET: "${JWT_SECRET}"
      JWT_EXPIRATION: ${JWT_EXPIRATION}
      MERCADO_PAGO_ACCESS_TOKEN: ${MERCADO_PAGO_ACCESS_TOKEN}
      MERCADO_PAGO_PUBLIC_KEY: ${MERCADO_PAGO_PUBLIC_KEY}
      API_KEY_APP: "${API_KEY_APP}"
      CLOUDINARY_CLOUD_NAME: ${CLOUDINARY_CLOUD_NAME}
      CLOUDINARY_API_KEY: ${CLOUDINARY_API_KEY}
      CLOUDINARY_API_SECRET: ${CLOUDINARY_API_SECRET}
      AI_VOICE_GENERATOR_URL: ${AI_VOICE_GENERATOR_URL}
    depends_on:
      - db
      - tts
    networks:
      - streampix-net

  # -------------------------
  # TTS FastAPI
  # -------------------------
  tts:
    build:
      context: ./streampix-tts
      dockerfile: Dockerfile
    container_name: streampix-tts
    restart: always
    ports:
      - "8000:8000"
    environment:
      API_KEY_APP: "${API_KEY_APP}"
      CLOUDINARY_CLOUD_NAME: ${CLOUDINARY_CLOUD_NAME}
      CLOUDINARY_API_KEY: ${CLOUDINARY_API_KEY}
      CLOUDINARY_API_SECRET: ${CLOUDINARY_API_SECRET}
    networks:
      - streampix-net

# -------------------------
# Rede interna
# -------------------------
networks:
  streampix-net:
    driver: bridge
